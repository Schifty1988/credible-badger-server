services:
  db:
    image: postgres
    container_name: credible-badger-db
    restart: always
    user: postgres
    ports: 
        - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_ADMIN_PASSWORD}
      POSTGRES_DB: postgres
      POSTGRES_SCHEMA: public
      DB_SERVICE_PASSWORD: ${DB_SERVICE_PASSWORD}
      DB_LIQUIBASE_PASSWORD: ${DB_LIQUIBASE_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init-database.sh:/docker-entrypoint-initdb.d/init-database.sh
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 1s
  web:
    build: .
    ports: 
        - "8080:8080"
    image: credible-badger-server
    container_name: credible-badger-server
    environment:
      DB_SERVICE_USER: service
      DB_SERVICE_PASSWORD: ${DB_SERVICE_PASSWORD}
      DB_LIQUIBASE_USER: liquibase
      DB_LIQUIBASE_PASSWORD: ${DB_LIQUIBASE_PASSWORD}
      SPRING_PROFILES_ACTIVE: production
      AWS_S3_BUCKET: ${AWS_S3_BUCKET}
      SPRING_ADMIN_PASSWORD: ${SPRING_ADMIN_PASSWORD}
    volumes:
      - ~/.aws:/root/.aws:ro
    depends_on:
      db:
        condition: service_healthy
volumes:
  pgdata:
  